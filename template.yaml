AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Query Mux API and save data to S3

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Resources:
  ## Creating Lambda role for deployment
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-LambdaRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        #Very Board Access Policies, this needs to refined to just specific requirements
        - PolicyName: !Sub "${AWS::StackName}-LambdaPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - 
                Sid: BucketAccess
                Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:CreateBucket"
                Resource:
                  - "arn:aws:s3:::<mux_s3_bucket>/*"
                  - "arn:aws:s3:::<mux_s3_bucket>"
              - 
                Sid: LoggingAccess
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                Resource: "*"
  mux:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: mux/
      Handler: app.lambda_handler
      Description: "Query Mux API and save data to S3"
      Runtime: python3.7
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          # Log Level for Cloudwatch Logs
          LOG_LEVEL: error
          # MUX ID
          MUX_TOKEN_ID: <ID>
          # Mux Secret
          MUX_TOKEN_SECRET: <SECRET>
          # Output bucket for finished files
          DESTINATION_BUCKET: <s3 bucket>
      Tags:
        purpose: "Query Mux API and save data to S3"
        built-by: ""
        stage: ""
        team: ""

  # Creating the Cron Job
  # https://stackoverflow.com/questions/53942059/cloudformation-awseventsrule-encountered-unsupported-property-id
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
  # https://stackoverflow.com/questions/52208700/creating-a-target-for-a-cloudwatch-event-rule-via-cloudformation-for-a-fargate
  3amDaily:
    Type: AWS::Events::Rule
    Properties:
      Description: "Create the Rule to run at 3am Daily"
      ScheduleExpression: "cron(0 3 * * ? *)"  # Everyday at 3am
      State: "ENABLED"
      Targets:
        -
          Arn: !GetAtt mux.Arn
          Id: "TargetFunctionV1" # No idea why this is needed, but it is!

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt mux.Arn
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt 3amDaily.Arn

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Mux:
    Description: "Lambda for Mux Overall"
    Value: !GetAtt mux.Arn
  MuxOverallIamRole:
    Description: "IAM Role for Mux Overall Data"
    Value: !GetAtt LambdaRole.Arn